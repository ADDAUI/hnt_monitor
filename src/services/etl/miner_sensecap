#!/usr/bin/env bash

set -euo pipefail

if [ ${trace} == "true" ]; then
  set -x
fi

id=etl.sensecap

sensecap_data() {
  log_info "processing data"

  get_miner_sensecap_data
  send_miner_sensecap_data

  log_debug "sensecap cpu temperature $(jq '.data.cpuTemperature' <<< "${payload}")"
  log_debug "sensecap cpu used $(jq '.data.cpuUsed' <<< "${payload}")"
  log_debug "sensecap memory total $(jq '.data.memoryTotal' <<< "${payload}")"
  log_debug "sensecap memory used $(jq '.data.memoryUsed' <<< "${payload}")"
  log_debug "sensecap sd total $(jq '.data.sdTotal' <<< "${payload}")"
  log_debug "sensecap sd used $(jq '.data.sdUsed' <<< "${payload}")"
  log_debug "sensecap antenna gain $(jq '.data.gain' <<< "${payload}")"
  log_debug "sensecap relayed $(jq '.data.relayed' <<< "${payload}")"
  log_debug "sensecap is healthy $(jq '.data.isHealth' <<< "${payload}")"
  log_debug "sensecap helium block_height $(jq '.data.totalHeight' <<< "${payload}")"
  log_debug "sensecap block height $(jq '.data.height' <<< "${payload}")"
  log_debug "sensecap connected $(jq '.data.connected' <<< "${payload}")"
  log_debug "sensecap dialable $(jq '.data.dialable' <<< "${payload}")"
  log_debug "sensecap nat type $(jq '.data.natType' <<< "${payload}")"
}


if [ "${sensecap_monitor}" == "true" ]; then

  for a in ${sensecap_serial_numbers}; do
    get_miner_sensecap_name
    sensecap_data &
  done

else
  log_debug "Sensecap monitor collection is disabled. Hint: (sensecap_monitor=${sensecap_monitor})"
  true
fi
