#!/usr/bin/env bash

set -euo pipefail

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
cd ${DIR}

for c in ../conf/*.conf; do
  . "${c}"
done

if [ ${trace} == "true" ]; then
  set -x
fi


addresses=$(< ../conf/address.list)
minutes_ago=$(date -u --date="15 minutes ago" +%s)
hour_ago=$(date -u --date="1 hour ago" +%s)
one_day_ago=$(date -u --date="1 days ago" +%s)
seven_days_ago=$(date -u --date="7 days ago" +%s)
thirty_days_ago=$(date -u --date="30 days ago" +%s)
id=reward_total.etl

reward_total() {
  echo "$(date +%Y-%m-%dT%H:%M:%S) [INFO] [$id]: getting data" >> "${logpath}/${logfile}"

  rewards_15m=0
  rewards_1h=0
  rewards_1d=0
  rewards_7d=0
  rewards_30d=0

  rewards=$(jq -r '.data[].timestamp' "${data_dir}/${a}"/*.rewards 2>/dev/null | sort -u)

  [ "${debug}" == "true" ] && echo -e "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: rewards timestamps\n${rewards}\n\n" >> "${logpath}/${logfile}" || true

  for r in ${rewards}; do
    time=$(date -d ${r} +%s)    

    if [ "${minutes_ago}" -le "${time}" ]; then
      ((rewards_15m++)) || true
    fi

    if [ "${hour_ago}" -le "${time}" ]; then
      ((rewards_1h++)) || true
    fi

    if [ "${one_day_ago}" -le "${time}" ]; then
      ((rewards_1d++)) || true
    fi

    if [ "${seven_days_ago}" -le "${time}" ]; then
      ((rewards_7d++)) || true
    fi

    if [ "${thirty_days_ago}" -le "${time}" ]; then
      ((rewards_30d++)) || true
    fi
  done

  [ "${debug}" == "true" ] && echo -e "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: rewards in 15 minute ${rewards_15m}" >> "${logpath}/${logfile}" || true
  [ "${debug}" == "true" ] && echo -e "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: rewards in 1 hour ${rewards_1h}" >> "${logpath}/${logfile}" || true
  [ "${debug}" == "true" ] && echo -e "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: rewards in 1 day ${rewards_1d}" >> "${logpath}/${logfile}" || true 
  [ "${debug}" == "true" ] && echo -e "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: rewards in 7 days ${rewards_7d}" >> "${logpath}/${logfile}" || true
  [ "${debug}" == "true" ] && echo -e "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: rewards in 30 days ${rewards_30d}" >> "${logpath}/${logfile}" || true

  cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}
# HELP ${project}_reward_15m total rewards by hour
# TYPE ${project}_reward_15m gauge
${project}_reward_15m{instance="${name}",address="${a}"} ${rewards_15m}
# HELP ${project}_reward_1h total rewards by hour
# TYPE ${project}_reward_1h gauge
${project}_reward_1h{instance="${name}",address="${a}"} ${rewards_1h}
# HELP ${project}_reward_1d total rewards in a day
# TYPE ${project}_reward_1d gauge
${project}_reward_1d{instance="${name}",address="${a}"} ${rewards_1d}
# HELP ${project}_reward_7d total rewards in 7 days
# TYPE ${project}_reward_7d gauge
${project}_reward_7d{instance="${name}",address="${a}"} ${rewards_7d}
# HELP ${project}_reward_30d total rewards in 30 days
# TYPE ${project}_reward_30d gauge
${project}_reward_30d{instance="${name}",address="${a}"} ${rewards_30d}
EOF

  echo "$(date +%Y-%m-%dT%H:%M:%S) [INFO] [$id]: data pushed to http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}" >> "${logpath}/${logfile}"
}

if [ "${hotspot_monitor}" == "true" ]; then
  for a in ${addresses}; do
    name=$(jq -r '.data.name' "${data_dir}/${a}/info" 2>/dev/null) || echo "$(date +%Y-%m-%dT%H:%M:%S) [ERROR] [$id]: could not get the miner name" >> "${logpath}/${logfile}"

    reward_total
  done
else
  [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: Hotspot monitor collection is disabled. Hint: (hotspot_monitor=false)" >> "${logpath}/${logfile}"
  true
fi
