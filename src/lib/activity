get_activity_timestamps() {
  log_debug "${activity} timestamps"
  activity_timestamps=$(jq -r '.time' <<< "${activity_payload}" | sort -u) || log_err "could not retrieve activity timestamps"
}

get_activity_elasticsearch() {
  if [[ "${collector_storage_profile}" == *"elasticsearch"* ]] && [ "${elasticsearch_url}" ]; then
    get_curl_options
    es_activity_payload=$(curl ${curl_options} -H "apikey: ${client_api_key}" -H "Content-Type: application/json" "${elasticsearch_url}/hnt-${client_api_key,,}.*/_search?q=_id:hotspot.${a}.collector.activity" | jq '.hits.hits[]._source' 2>/dev/null) || log_err "could not retrieve [activity] elasticsearch results"
    log_debug "get.activity.elasticsearch response [ $(jq -r -c '.data[].time' <<< "${es_activity_payload}" 2>/dev/null | tr '\n' ' ')]"
  fi
}

get_activity_sent_beacons() {
  if [[ "${collector_storage_profile}" == *"local"* ]] || [ ! "${collector_storage_profile}" ]; then
    activity_payload=$(jq -r --arg a "${a}" '.data[] | select(.type == "poc_receipts_v1") | select((.,.path[]).challengee != null) | select((.,.path[]).challengee == $a)' "${data_dir}/${a}"/*.activity 2>/dev/null) || log_err "could not retrieve sent beacons"
  fi

  if [[ "${collector_storage_profile}" == *"elasticsearch"* ]] && [ "${elasticsearch_url}" ]; then
    activity_payload=$(jq -r --arg a "${a}" '.data[] | select(.type == "poc_receipts_v1") | select((.,.path[]).challengee != null) | select((.,.path[]).challengee == $a)' <<< "${es_activity_payload}" 2>/dev/null) || log_err "could not retrieve sent beacons"
  fi
}

get_activity_challenged_beacons() {
  if [[ "${collector_storage_profile}" == *"local"* ]] || [ ! "${collector_storage_profile}" ]; then
    activity_payload=$(jq -r --arg a "${a}" '.data[] | select(.type == "poc_receipts_v1") | select(.challenger != null) | select(.challenger == $a)' "${data_dir}/${a}"/*.activity 2>/dev/null) || log_err "could not retrieve challenged beacons"
  fi

  if [[ "${collector_storage_profile}" == *"elasticsearch"* ]] && [ "${elasticsearch_url}" ]; then
    activity_payload=$(jq -r --arg a "${a}" '.data[] | select(.type == "poc_receipts_v1") | select(.challenger != null) | select(.challenger == $a)' <<< "${es_activity_payload}" 2>/dev/null) || log_err "could not retrieve challenged beacons"
  fi
}

get_activity_create_challenge() {
  if [[ "${collector_storage_profile}" == *"local"* ]] || [ ! "${collector_storage_profile}" ]; then
    activity_payload=$(jq -r '.data[] | select(.type == "poc_request_v1")' "${data_dir}/${a}"/*.activity 2>/dev/null) || log_err "could not retrieve create challenge"
  fi

  if [[ "${collector_storage_profile}" == *"elasticsearch"* ]] && [ "${elasticsearch_url}" ]; then
    activity_payload=$(jq -r '.data[] | select(.type == "poc_request_v1")' <<< "${es_activity_payload}" 2>/dev/null) || log_err "could not retrieve create challenge"
  fi
}

get_activity_data_transfer() {
  if [[ "${collector_storage_profile}" == *"local"* ]] || [ ! "${collector_storage_profile}" ]; then
    activity_payload=$(jq -r '.data[] | select(.type == "state_channel_close_v1")' "${data_dir}/${a}"/*.activity 2>/dev/null) || log_err "could not retrieve data transfer"
  fi

  if [[ "${collector_storage_profile}" == *"elasticsearch"* ]] && [ "${elasticsearch_url}" ]; then
    activity_payload=$(jq -r '.data[] | select(.type == "state_channel_close_v1")' <<< "${es_activity_payload}" 2>/dev/null) || log_err "could not retrieve data transfer"
  fi
}
