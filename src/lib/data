send_block_height() {
  if [ "${prometheus_pg_host}" ]; then
    cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name}
# HELP ${project}_${name}_block_height helium block height
# TYPE ${project}_${name}_block_height gauge
${project}_${name}_block_height{instance="${name}"} ${height}
EOF

    log_info "Data pushed to http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name}"
  fi
}

send_miner_bobcat() {
  if [ "${prometheus_pg_host}" ]; then
    cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name//-/_}_temperature of the bobcat miner cpu
# TYPE ${project}_${name//-/_}_temperature gauge
${project}_${name//-/_}_temperature{instance="${name}",core="0"} $(jq '.temp0' <<< "${payload}")
${project}_${name//-/_}_temperature{instance="${name}",core="1"} $(jq '.temp1' <<< "${payload}")
EOF
  fi
}

send_miner_sensecap() {
  if [ "${prometheus_pg_host}" ]; then
    cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name//-/_}_cpu_temperature of the sensecap miner cpu
# TYPE ${project}_${name//-/_}_cpu_temperature gauge
${project}_${name//-/_}_cpu_temperature{instance="${name}"} $(jq '.data.cpuTemperature' <<< "${payload}")
# HELP ${project}_${name//-/_}_cpu_used of the sensecap miner
# TYPE ${project}_${name//-/_}_cpu_used gauge
${project}_${name//-/_}_cpu_used{instance="${name}"} $(jq '.data.cpuUsed' <<< "${payload}")
# HELP ${project}_${name//-/_}_memory_total of the sensecap miner
# TYPE ${project}_${name//-/_}_memory_total gauge
${project}_${name//-/_}_memory_total{instance="${name}"} $(jq '.data.memoryTotal' <<< "${payload}")
# HELP ${project}_${name//-/_}_memory_used of the sensecap miner
# TYPE ${project}_${name//-/_}_memory_used gauge
${project}_${name//-/_}_memory_used{instance="${name}"} $(jq '.data.memoryUsed' <<< "${payload}")
# HELP ${project}_${name//-/_}_sd_total of the sensecap miner
# TYPE ${project}_${name//-/_}_sd_total gauge
${project}_${name//-/_}_sd_total{instance="${name}"} $(jq '.data.sdTotal' <<< "${payload}")
# HELP ${project}_${name//-/_}_sd_used of the sensecap miner
# TYPE ${project}_${name//-/_}_sd_used gauge
${project}_${name//-/_}_sd_used{instance="${name}"} $(jq '.data.sdUsed' <<< "${payload}")
# HELP ${project}_${name//-/_}_antenna_gain of the sensecap miner
# TYPE ${project}_${name//-/_}_antenna_gain gauge
${project}_${name//-/_}_antenna_gain{instance="${name}"} $(jq '.data.gain' <<< "${payload}")
# HELP ${project}_${name//-/_}_relayed status of the sensecap miner 1: yes, 2: no
# TYPE ${project}_${name//-/_}_relayed_used gauge
${project}_${name//-/_}_relayed{instance="${name}"} $(jq '.data.relayed' <<< "${payload}")
# HELP ${project}_${name//-/_}_is_healthy status of the sensecap miner 1: yes, 2: no
# TYPE ${project}_${name//-/_}_is_healthy gauge
${project}_${name//-/_}_is_healthy{instance="${name}"} $(jq '.data.isHealth' <<< "${payload}")
# HELP ${project}_${name//-/_}_helium_block_height of helium blockchain
# TYPE ${project}_${name//-/_}_helium_block_height
${project}_${name//-/_}_helium_block_height{instance="${name}"} $(jq '.data.totalHeight' <<< "${payload}")
# HELP ${project}_${name//-/_}_block_height of the sensecap miner
# TYPE ${project}_${name//-/_}_block_height gauge
${project}_${name//-/_}_block_height{instance="${name}"} $(jq '.data.height' <<< "${payload}")
# HELP ${project}_${name//-/_}_connected status of the sensecap miner P2P Outbound Status. -1: unknown, 0: unhealthy, 1: healthy
# TYPE ${project}_${name//-/_}_connected gauge
${project}_${name//-/_}_connected{instance="${name}"} $(jq '.data.connected' <<< "${payload}")
# HELP ${project}_${name//-/_}_dialable status of the sensecap miner P2P Inbound Status. -1: unknown, 0: unhealthy, 1: healthy
# TYPE ${project}_${name//-/_}_dialable gauge
${project}_${name//-/_}_dialable{instance="${name}"} $(jq '.data.dialable' <<< "${payload}")
# HELP ${project}_${name//-/_}__nat_type of the WAN/LAN connection -1: unknown, 0: none, 1: static, 2: symmetric, 3: restricted
# TYPE ${project}_${name//-/_}__nat_type gauge
${project}_${name//-/_}_nat_type{instance="${name}"} $(jq '.data.natType' <<< "${payload}")
EOF
  fi
}

send_reward_counts() {
  if [ "${prometheus_pg_host}" ]; then
    cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name//-/_}_reward_15m total rewards 15 minutes
# TYPE ${project}_${name//-/_}_reward_15m gauge
${project}_${name//-/_}_reward_15m{instance="${name}",address="${a}"} ${rewards_15m}
# HELP ${project}_${name//-/_}_reward_1h total rewards by hour
# TYPE ${project}_${name//-/_}_reward_1h gauge
${project}_${name//-/_}_reward_1h{instance="${name}",address="${a}"} ${rewards_1h}
# HELP ${project}_${name//-/_}_reward_1d total rewards in a day
# TYPE ${project}_${name//-/_}_reward_1d gauge
${project}_${name//-/_}_reward_1d{instance="${name}",address="${a}"} ${rewards_1d}
# HELP ${project}_${name//-/_}_reward_7d total rewards in 7 days
# TYPE ${project}_${name//-/_}_reward_7d gauge
${project}_${name//-/_}_reward_7d{instance="${name}",address="${a}"} ${rewards_7d}
# HELP ${project}_${name//-/_}_reward_30d total rewards in 30 days
# TYPE ${project}_${name//-/_}_reward_30d gauge
${project}_${name//-/_}_reward_30d{instance="${name}",address="${a}"} ${rewards_30d}
EOF

    log_info "${a} data pushed to http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}"
  fi
}

send_reward_scale() {
  if [ "${prometheus_pg_host}" ]; then
    cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name//-/_}_reward_scale based on hex and nearby miners
# TYPE ${project}_${name//-/_}_reward_scale gauge
${project}_${name//-/_}_reward_scale{instance="${name}",address="${a}"} ${scale}
EOF

    log_info "${a} data pushed to http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}"
  fi
}

send_witness_count() {
  if [ "${prometheus_pg_host}" ]; then
  cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name//-/_}_witnessed miners
# TYPE ${project}_${name//-/_}_witnessed gauge
${project}_${name//-/_}_witnessed{instance="${name}",address="${a}"} ${witnessed_count}
# HELP ${project}_${name//-/_}_witnesses miners
# TYPE ${project}_${name//-/_}_witnesses gauge
${project}_${name//-/_}_witnesses{instance="${name}",address="${a}"} ${witnesses_count}
EOF

    log_info "${a} data pushed to http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}"
  fi
}
