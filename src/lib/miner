get_miner_elasticsearch() {
  if [[ "${collector_storage_profile}" == *"elasticsearch"* ]] && [ "${elasticsearch_url}" ]; then
    get_curl_options
    q=${miner}.${a}.${search}
    n=0

    es_query_payload=$(curl ${curl_options} -H "apikey: ${client_api_key}" -H "Content-Type: application/json" "${elasticsearch_url}/hnt-${client_id}/_search?size=${elasticsearch_item_query_limit}&q=docId:${q}")

    while [ ! "$(elasticserarch_query_success_payload)" ]; do
      if [ "${n}" -ge "${api_retry_threshold}" ]; then
        log_err "maximum retries have been reached ${api_retry_threshold}. could not retrieve [${q}] elasticsearch results: [${es_query_payload}]"
        exit 1
      fi

      log_warn "bad response from the elasticsearch api while retrieving [${q}] data. Retrying in 5 seconds..."
      ((n++)) || true
      sleep "${api_retry_wait}"
      es_query_payload=$(curl ${curl_options} -H "apikey: ${client_api_key}" -H "Content-Type: application/json" "${elasticsearch_url}/hnt-${client_id}.*/_search?size=${elasticsearch_item_query_limit}&q=docId:${q}")
    done

    es_miner_payload=$(jq '.hits.hits[] | select(._id | startswith('\"${miner}.${a}.${search}\"')) | ._source' <<< "${es_query_payload}" 2>/dev/null)
    log_debug "get.miner.elasticsearch response $(jq -c <<< "${es_miner_payload}")"
  fi
}

get_actual_height() {
  get_height
  helium_height=${height}
}
