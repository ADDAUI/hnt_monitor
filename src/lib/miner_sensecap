#!/usr/bin/env bash

set -euo pipefail

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
cd ${DIR}

for c in ../conf/*.conf; do
  . "${c}"
done

if [ ${trace} == "true" ]; then
  set -x
fi

id=miner.sensecap
data_dir="${data_dir}/${id}"
if [ ! -d "${data_dir}" ]; then
  mkdir -p "${data_dir}"
fi


if [ "${sensecap_monitor}" == "true" ]; then
  echo "$(date +%Y-%m-%dT%H:%M:%S) [INFO] [$id]: Starting sensecap monitor run" >> "${logpath}/${logfile}"

  for M in ${sensecap_serial_numbers}; do
    echo "$(date +%Y-%m-%dT%H:%M:%S) [INFO] [$id]: getting sensecap metrics for - ${M}" >> "${logpath}/${logfile}"
    data=$(curl -s https://status.sensecapmx.cloud/api/openapi/device/view_device?sn=${M}&api_key=${sensecap_api_key}) || echo "$(date +%Y-%m-%dT%H:%M:%S) [ERROR] [$id]: code $? - could not retrieve sensecap data" >> "${logpath}/${logfile}"
   
    name=$(jq -r '.data.name' <<< "${data}" | tr 'A-Z' 'a-z' | sed 's% %-%g') || echo "$(date +%Y-%m-%dT%H:%M:%S) [WARN]: No name collected for ${M}" >> "${logpath}/${logfile}"

    cat <<EOF | curl -s --data-binary @- http://${prometheus_pg_host}:${prometheus_pg_port}/metrics/job/${project}_${name//-/_}
# HELP ${project}_${name//-/_}_cpu_temperature of the sensecap miner cpu
# TYPE ${project}_${name//-/_}_cpu_temperature gauge
${project}_${name//-/_}_cpu_temperature{instance="${name}"} $(jq '.data.cpuTemperature' <<< "${data}")
# HELP ${project}_${name//-/_}_cpu_used of the sensecap miner 
# TYPE ${project}_${name//-/_}_cpu_used gauge
${project}_${name//-/_}_cpu_used{instance="${name}"} $(jq '.data.cpuUsed' <<< "${data}")
# HELP ${project}_${name//-/_}_memory_total of the sensecap miner
# TYPE ${project}_${name//-/_}_memory_total gauge
${project}_${name//-/_}_memory_total{instance="${name}"} $(jq '.data.memoryTotal' <<< "${data}")
# HELP ${project}_${name//-/_}_memory_used of the sensecap miner
# TYPE ${project}_${name//-/_}_memory_used gauge
${project}_${name//-/_}_memory_used{instance="${name}"} $(jq '.data.memoryUsed' <<< "${data}")
# HELP ${project}_${name//-/_}_sd_total of the sensecap miner
# TYPE ${project}_${name//-/_}_sd_total gauge
${project}_${name//-/_}_sd_total{instance="${name}"} $(jq '.data.sdTotal' <<< "${data}")
# HELP ${project}_${name//-/_}_sd_used of the sensecap miner
# TYPE ${project}_${name//-/_}_sd_used gauge
${project}_${name//-/_}_sd_used{instance="${name}"} $(jq '.data.sdUsed' <<< "${data}")
# HELP ${project}_${name//-/_}_antenna_gain of the sensecap miner
# TYPE ${project}_${name//-/_}_antenna_gain gauge
${project}_${name//-/_}_antenna_gain{instance="${name}"} $(jq '.data.gain' <<< "${data}")
# HELP ${project}_${name//-/_}_relayed status of the sensecap miner 1: yes, 2: no
# TYPE ${project}_${name//-/_}_relayed_used gauge
${project}_${name//-/_}_relayed{instance="${name}"} $(jq '.data.relayed' <<< "${data}")
# HELP ${project}_${name//-/_}_is_healthy status of the sensecap miner 1: yes, 2: no
# TYPE ${project}_${name//-/_}_is_healthy gauge
${project}_${name//-/_}_is_healthy{instance="${name}"} $(jq '.data.isHealth' <<< "${data}")
# HELP ${project}_${name//-/_}_helium_block_height of helium blockchain
# TYPE ${project}_${name//-/_}_helium_block_height
${project}_${name//-/_}_helium_block_height{instance="${name}"} $(jq '.data.totalHeight' <<< "${data}")
# HELP ${project}_${name//-/_}_block_height of the sensecap miner
# TYPE ${project}_${name//-/_}_block_height gauge
${project}_${name//-/_}_block_height{instance="${name}"} $(jq '.data.height' <<< "${data}")
# HELP ${project}_${name//-/_}_connected status of the sensecap miner P2P Outbound Status. -1: unknown, 0: unhealthy, 1: healthy 
# TYPE ${project}_${name//-/_}_connected gauge
${project}_${name//-/_}_connected{instance="${name}"} $(jq '.data.connected' <<< "${data}")
# HELP ${project}_${name//-/_}_dialable status of the sensecap miner P2P Inbound Status. -1: unknown, 0: unhealthy, 1: healthy
# TYPE ${project}_${name//-/_}_dialable gauge
${project}_${name//-/_}_dialable{instance="${name}"} $(jq '.data.dialable' <<< "${data}")
# HELP ${project}_${name//-/_}__nat_type of the WAN/LAN connection -1: unknown, 0: none, 1: static, 2: symmetric, 3: restricted
# TYPE ${project}_${name//-/_}__nat_type gauge
${project}_${name//-/_}_nat_type{instance="${name}"} $(jq '.data.natType' <<< "${data}")
EOF

    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap cpu temperature $(jq '.data.cpuTemperature' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap cpu used $(jq '.data.cpuUsed' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap memory total $(jq '.data.memoryTotal' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap memory used $(jq '.data.memoryUsed' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap sd total $(jq '.data.sdTotal' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap sd used $(jq '.data.sdUsed' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap antenna gain $(jq '.data.gain' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap relayed $(jq '.data.relayed' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap is healthy $(jq '.data.isHealth' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap helium block_height $(jq '.data.totalHeight' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap block height $(jq '.data.height' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap connected $(jq '.data.connected' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap dialable $(jq '.data.dialable' <<< "${data}")"
    [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: sensecap nat type $(jq '.data.natType' <<< "${data}")"
  done

  echo "$(date +%Y-%m-%dT%H:%M:%S) [INFO] [$id]: Sensecap monitor run complete" >> "${logpath}/${logfile}"
else
  [ "${debug}" == "true" ] && echo "$(date +%Y-%m-%dT%H:%M:%S) [DEBUG] [$id]: Sensecap monitor collection is disabled. Hint: (sensecap_monitor=false)" >> "${logpath}/${logfile}"
  true
fi
