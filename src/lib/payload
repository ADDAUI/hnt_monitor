get_payload() {
  payload=$(curl -sL "${url}" || jq '.' 2>/dev/null) || log_err "api timeout"
}

next_payload() {
  new_payload=$(curl -sL "${url}&cursor=${cursor}" | jq '.' 2>/dev/null) || log_err "api timeout"
}

send_payload() {
  option=${1:-""}
  directory=${2:-""}

  if [ "${directory}" ]; then
    if [ "${option}" == "write" ]; then
      echo "${payload}" > "${directory}"
    elif [ "${option}" == "append" ]; then
      echo "${payload}" >> "${directory}"
    else
      log_err "invalid option - ${option}"
    fi
  else
    log_err "no directory to send payload was specified"
  fi
}

blockchain_success_payload() {
  jq 'select(.data != null)' <<< "${payload}"
}

bobcat_miner_success_payload() {
  jq 'select(.miner != null)' <<< "${payload}"
}

bobcat_temp_success_payload() {
  jq 'select(.unit != null)' <<< "${payload}"
}

bobcat_status_success_payload() {
  jq 'select(.status != null)' <<< "${payload}"
}

longap_success_payload() {
  jq 'select(.[].publicKey != null)' <<< "${payload}"
}

nebra_success_payload() {
  jq 'select(.AN != null)' <<< "${payload}"
}

sensecap_success_payload() {
  jq 'select(.data.name != null)' <<< "${payload}"
}

get_cursor() {
  p=${1:-"${payload}"}
  cursor=$(jq -r 'select(.cursor != null) | .cursor' <<< "${p}") || log_info "cursor data empty"
}
