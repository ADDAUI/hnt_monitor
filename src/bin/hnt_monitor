#!/usr/bin/env bash

set -euo pipefail

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

OPT=${1:-"run"}
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
cd ${DIR}

# Set libs
for l in ../lib/*; do
  . "${l}"
done

id=main
init=true

set_home
get_configs


make_dir ${logpath}
make_dir ${data_dir}


log_info "initializing hnt monitor"

rm_locks

run() {
  while true; do
  
    if [ "${init}" == "true" ]; then
      when="30 days ago"
    else
      when=
    fi

    run_collector

    if [ "${init}" == "false" ]; then
      run_etl
      run_system
    else
      log_info "allowing collections to finish before processesing data"
      sleep 10
      init=false
      log_info "setting initialize to false"
    fi

    sleep 60

  done
}

case ${OPT} in
           start|run)
             run
             ;;
           *)
             echo "invalid argument"
             ;;
esac
